#!/bin/sh /etc/rc.common

USE_PROCD=1
#Commenting start to ensure that service is started manually
#START=97  # Service startup order
STOP=99  # Service stop order
Name=ieee1905_agent
VETH_BASE_IFACE="eth1" # Base interface for veth pair
VETH_AGENT_PEER="${VETH_BASE_IFACE}_virt_peer" # Peer interface for veth pair
BRIDGE_NAME="br-lan"

# Process configuration
PROG="/usr/bin/ieee1905"
PIDFILE="/tmp/ieee1905_agent.pid"
ARGS="-f ieee1905::al_sap=trace,ieee1905::cmdu_handler=trace,ieee1905::cmdu_proxy=trace,ieee1905::cmdu_observer=trace -i"

#Helper function for logging with timestamp
log_message() {
    # Get current uptime in seconds and hundredths (e.g., "12345.67")
    UPTIME_SECONDS_DECIMAL=$(cut -d' ' -f1 /proc/uptime)
    # Extract integer seconds and fractional part
    UPTIME_SECONDS=${UPTIME_SECONDS_DECIMAL%.*}
    UPTIME_FRACTION=${UPTIME_SECONDS_DECIMAL#*.}

    # Convert fraction to milliseconds (take first 3 digits, pad with zeros if needed)
    # This assumes UPTIME_FRACTION is at least 2 digits.
    # For robust padding if it's less than 3 digits:
    MILLISECONDS=$(printf "%-3.3s" "$UPTIME_FRACTION" | sed 's/ /0/g')
    echo "$(date "+%Y-%m-%d %H:%M:%S").${MILLISECONDS} - $@" >> /tmp/em_agent_log.txt
}

start_service() {
    log_message "Starting ieee1905_agent service..."
    # Run setup_veth_for_em.sh only if virtual ethernet interface
    # is not created
    if [ ! -e "/sys/class/net/$VETH_AGENT_PEER/address" ]; then
        log_message "Running agent setup_veth_for_em.sh..."
        cd /banana-pi
        ./setup_veth_for_em.sh $BRIDGE_NAME $VETH_BASE_IFACE false >> /tmp/em_agent_log.txt
    fi

    # Use procd to manage the ieee1905 process and ieee1905_controller process
    procd_open_instance "ieee1905_agent"
    procd_set_param command $PROG $ARGS $VETH_AGENT_PEER # Command with arguments
    procd_set_param respawn 25 10 10  # Automatically restart if down
    procd_set_param limits core="unlimited"
    procd_set_param limits stack="unlimited"
    procd_set_param stdout 1 # forward stdout of the command to logd
    procd_set_param stderr 1 # same for stderr
    procd_set_param pidfile "$PIDFILE"
    procd_close_instance

    log_message "ieee1905_agent started."
}

stop_service() {
    log_message "Stopping ieee1905 service..."
    # Stop the main process if it is running
    if [ -f $PIDFILE ]; then
        kill -9 "$(cat $PIDFILE)"  # Kill the process
        rm -f $PIDFILE         # Remove the PID file
    fi
}

restart_service() {
    log_message "Restart triggered for ieee1905_agent service..."
    stop
    start
}

reload_service() {
    log_message "Reload triggered for ieee1905_agent service..."
    stop
    start
}
