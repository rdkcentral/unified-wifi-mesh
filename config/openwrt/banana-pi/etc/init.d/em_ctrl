#!/bin/sh /etc/rc.common

START=95  # Service startup order
STOP=95  # Service stop order
USE_PROCD=1
Name=onewifi_em_ctrl
VETH_CTRL_PEER="eth0_virt_peer"
BRIDGE_NAME="br-lan"

# Process 1 configuration
PROG1="/usr/bin/ieee1905"
PIDFILE1="/tmp/ieee1905_ctrl.pid"
ARGS1="-f ieee1905::al_sap=trace,ieee1905::cmdu_handler=trace,ieee1905::cmdu_proxy=trace,ieee1905::cmdu_observer=trace -i eth0_virt_peer --sap-data-path /tmp/al_em_ctrl_data_socket --sap-control-path /tmp/al_em_ctrl_control_socket"

# Process 2 configuration
PROG2="/usr/bin/onewifi_em_ctrl"
PIDFILE2="/tmp/em_ctrl.pid"
ARGS2="bpi@root"

start_service() {
    echo "Starting em_ctrl service..." >> /tmp/em_ctrl_log.txt
    # Run setup_veth_for_em_ctrl.sh only if virtual ethernet interface
    # is not created
    if [ ! -e "/sys/class/net/$VETH_CTRL_PEER/address" ]; then
        echo "Running setup_veth_for_em_ctrl.sh..." >> /tmp/em_ctrl_log.txt
        cd /banana-pi
        ./setup_veth_for_em_ctrl.sh $BRIDGE_NAME >> /tmp/em_ctrl_log.txt
        echo "Initializing mysql, running setup_mysql_db.sh..." >> /tmp/em_ctrl_log.txt
        ./setup_mysql_db.sh
    fi

    # Use procd to manage the ieee1905 process and em_controller process
    procd_open_instance "ieee1905_ctrl"
    procd_set_param command $PROG1 $ARGS1 # Command with arguments
    procd_set_param respawn 25 10 10  # Automatically restart if down
    procd_set_param limits core="unlimited"
    procd_set_param limits stack="unlimited"
    procd_set_param stdout 1 # forward stdout of the command to logd
    procd_set_param stderr 1 # same for stderr
    procd_set_param pidfile "$PIDFILE1"
    procd_close_instance

    procd_open_instance "onewifi_em_ctrl"
    procd_set_param command $PROG2 $ARGS2  # Command with arguments
    procd_set_param respawn 50 10 10  # Automatically restart if down
    procd_set_param limits core="unlimited"
    procd_set_param limits stack="unlimited"
    procd_set_param stdout 1 # forward stdout of the command to logd
    procd_set_param stderr 1 # same for stderr
    procd_set_param pidfile "$PIDFILE2"
    procd_set_param delay 15 # Wait 15 seconds before starting the command
    procd_close_instance
}

stop_service() {
    echo "Stopping onewifi_em_ctrl service..." >> /tmp/em_ctrl_log.txt
    # Stop the main process if it is running
    if [ -f $PIDFILE2 ]; then
        kill -9 "$(cat $PIDFILE2)"  # Kill the process
        rm -f $PIDFILE2         # Remove the PID file
    fi
    echo "Stopping ieee1905 service..." >> /tmp/em_ctrl_log.txt
    # Stop the main process if it is running
    if [ -f $PIDFILE1 ]; then
        kill -9 "$(cat $PIDFILE1)"  # Kill the process
        rm -f $PIDFILE1         # Remove the PID file
    fi
}

restart_service() {
    echo "Restart triggered for em_ctrl service..."
    stop
    start
}

reload_service() {
    echo "Reload triggered for em_ctrl service..."
    stop
    start
}
